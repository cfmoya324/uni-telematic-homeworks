# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  config.vm.define "servidorVM" do |servidorVM|

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
    servidorVM.vm.box = "bento/ubuntu-22.04"
    servidorVM.vm.hostname = "servidorVM"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    servidorVM.vm.network "private_network", ip: "192.168.56.2"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
    # documentation for more information about their specific syntax and use.

    servidorVM.vm.provision "shell", path: "script_servidor.sh"

    # config.vm.provision "shell", inline: <<-SHELL
    #   apt-get update
    #   apt-get install -y apache2
    # SHELL

  end

  config.vm.define "clienteVM" do |clienteVM|

    clienteVM.vm.box = "bento/ubuntu-22.04"
    clienteVM.vm.hostname = "clienteVM"
    clienteVM.vm.network "private_network", ip: "192.168.56.3"
    #clienteVM.vm.network "forwarded_port", guest: 3000, host: 3001
    clienteVM.vm.provision "shell", path: "script_cliente.sh"

  end

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    #vb.gui = true

    # Customize the amount of memory on the VM:
    vb.memory = "4096"
    vb.cpus = "4"
  end

end
